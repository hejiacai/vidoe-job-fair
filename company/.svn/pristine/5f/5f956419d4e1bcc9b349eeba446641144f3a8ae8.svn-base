<?php

/**
 *
 * @ClassName controller_video
 * @Desc      视频面试
 * @author    huangwentao@huibo.com
 * @date      2013-9-26 下午01:51:47
 */
class controller_video extends components_cbasepage {
	/**
	 * 构造函数
	 */
	function __construct() {
		parent::__construct();
	}
	
	/**
	 * 我的账户入口
	 * @param $inPath
	 */
	function pageIndex($inPath) {
		
		
        return $this->render("./chat/video.html",$this->_aParams);
	}
    
    
    public function pageGetToken($inPath){
        $pathdata       = base_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $channel_id     = base_lib_BaseUtils::getStr($pathdata["room"],"int",1900);
        $account_id     = base_lib_BaseUtils::getCookie('accountid');
        $service_rtc    = new SAliRTC($account_id,"company");
        $token_data     = $service_rtc->getTokenData($channel_id);
        echo json_encode($token_data);exit;
    }
    
    //视频聊天创建房间  校园网络招聘会  
    public function pageCreateRoom($inPath){
        $pathdata       = base_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $net_apply_id   = base_lib_BaseUtils::getStr($pathdata["net_apply_id"],"int",0);
        $resume_id      = base_lib_BaseUtils::getStr($pathdata["resume_id"],"int",0);
        $job_id         = base_lib_BaseUtils::getStr($pathdata["job_id"],"int",0);
        $company_id     = $this->_userid;
        $account_id     = base_lib_BaseUtils::getCookie('accountid');
        
        if(empty($net_apply_id) && empty($resume_id)){
            echo $this->jsonMsg(false, "缺少必要参数");exit;
        }
        
        $service_channel     = new base_service_schoolnet_channel();
        list($status,$msg,$return_data) = $service_channel->initRoomInfo($account_id, $company_id, $resume_id, $job_id, $net_apply_id);
        echo $this->jsonMsg($status, $msg,$return_data);
    }
    
    //获取视频聊天基本信息
    public function pageGetApplyBaseInfo($inPath){
        $pathdata       = base_lib_BaseUtils::saddslashes($this->getUrlParams($inPath));
        $net_apply_id   = base_lib_BaseUtils::getStr($pathdata["net_apply_id"],"int",0);
        $type           = base_lib_BaseUtils::getStr($pathdata["type"],"string","");
        $account_id     = base_lib_BaseUtils::getCookie('accountid');
        if(empty($net_apply_id)){
            echo $this->jsonMsg(false, "缺少必要参数");exit; 
        }
        switch($type){
            case "nextApply": //获取下
                $this->_getNextApplyInfo($net_apply_id);
                break;
            case "setApplyOn"://开始视频面试
                $channel_id         = base_lib_BaseUtils::getStr($pathdata["channel_id"],"int",0);
                $service_net_apply   = new base_service_schoolnet_shuangxuanpersonapply();
                list($result,$msg)  = $service_net_apply->startInterview($net_apply_id, true,null,$account_id);
                if($result !== false){
                    $service_channel     = new base_service_schoolnet_channel();
                    $service_channel->setChannelStart($channel_id, $account_id);
                    echo $this->jsonMsg(true, "开始视频面试成功");exit;
                }else{
                    echo $this->jsonMsg(false, $msg);exit;
                }
                break;
            case "setInterviewResult": //
                $service_net_apply   = new base_service_schoolnet_shuangxuanpersonapply();
                $status_type         = base_lib_BaseUtils::getStr($pathdata["status_type"],"string","");
                $set_wait_type = true;
                if($status_type == "wait"){
                    $status = 4;
                }elseif($status_type == "no"){
                     $status = 3;
                }elseif($status_type == "yes"){
                    $status = 2;
                }elseif($status_type == "jump"){
                    $set_wait_type = false;
                    $status        = 5;
                }
                $result = $service_net_apply->setStatus($net_apply_id, $status,$set_wait_type); //设置成面试中
                if($result !== false){
                    if($status == 5){
                        $channel_id             = base_lib_BaseUtils::getStr($pathdata["channel_id"],"int",0);
                        $service_channel        = new base_service_schoolnet_channel();
                        $service_channel->setChannelEnd($channel_id,$account_id);
                        //如果是跳过 给求职者发送短信
                        $this->sendOverMsg($net_apply_id);
                    }elseif($status == 2){
                        $this->sendSuccessMsg($net_apply_id);
                    }
                    
                    echo $this->jsonMsg(true, "操作成功");exit;
                }else{
                    echo $this->jsonMsg(false, "操作失败");exit;
                }
                break;
            case "getTime":
                $service_channel     = new base_service_schoolnet_channel();
                $last_time           = $service_channel->getLastApplyTime($net_apply_id);
                $is_can_extent       = $service_channel->checkCanExtend($net_apply_id);
                echo $this->jsonMsg(true, "操作成功",["last_time" => $last_time,"can_extent" => $is_can_extent]);exit;
                break;
            case "setTime":
                $service_channel                = new base_service_schoolnet_channel();
                $last_time                      = base_lib_BaseUtils::getStr($pathdata["last_time"],"int",0);
                $service_channel             = new base_service_schoolnet_channel();
                $service_channel->setApplyTime($net_apply_id, $last_time);
                echo $this->jsonMsg(true, "操作成功");exit;
                break;
            case "setExtend":
                $service_channel             = new base_service_schoolnet_channel();
                $is_can_extent                  = $service_channel->checkCanExtend($net_apply_id);
                if(!$is_can_extent){
                    echo $this->jsonMsg(true, "操作失败");exit;
                }
                $service_channel->setExtend($net_apply_id);
                //重新设置时间
                $last_time                   = base_lib_BaseUtils::getStr($pathdata["last_time"],"int",0);
                $service_channel->setApplyTime($net_apply_id, $last_time);
                echo $this->jsonMsg(true, "操作成功");exit;
                break;
            //结束面试
            case "setApplyEnd":
                $channel_id             = base_lib_BaseUtils::getStr($pathdata["channel_id"],"int",0);
                $service_channel        = new base_service_schoolnet_channel();
                $service_channel->setChannelEnd($channel_id,$account_id);
                break;
            case "checkChannelStatus":
                $service_channel = new base_service_schoolnet_channel();
                $channel_info    = $service_channel->getChannelByAccount($account_id);
                if(empty($channel_info) || $channel_info["status"]== -1){
                    echo $this->jsonMsg(false, "no");exit;
                }
                echo $this->jsonMsg(true, "yes");exit;
                break;
            default :
                echo $this->jsonMsg(false, "没有该类型");exit; 
                break;
        }
    }
    
    /**
     *@desc 获取基本信息 
     */
    private function _getNextApplyInfo($net_apply_id){
        $service_net_apply   = new base_service_schoolnet_shuangxuanpersonapply();
        //获取下一个面试
        $company_id = $this->_userid;
        $next_apply_info     = $service_net_apply->getNextApply($net_apply_id, $company_id, "id,person_id,create_time,resume_id,job_id");
        if(empty($next_apply_info)){
            echo $this->jsonMsg(false, "没有下一个面试申请信息");exit; 
        }
        $service_resume     = new base_service_person_resume_resume();
        $service_person     = new base_service_person_person();
        $service_job        = new base_service_company_job_job();
        $service_degree     = new base_service_common_degree();
        
        $job_info           = $service_job->getJob($next_apply_info["job_id"], "station");
        $person_info        = $service_person->getPerson($next_apply_info["person_id"], "user_name,sex,birthday2");
        $resume_info        = $service_resume->getResume($next_apply_info["resume_id"], "degree_id");
        $return_data        = [];
        
        $return_data["next_apply_id"] = $next_apply_info["id"];
        $return_data["next_name"]     = $person_info["user_name"];
        $return_data["next_degree"]   = "学历未知";
        if(!empty($resume_info["degree_id"])){
            $degree_name = $service_degree->getDegree($resume_info["degree_id"]);
            if(!empty($degree_name)){
                $return_data["next_degree"] = $degree_name;
            }
        }
        //性别
        $return_data["next_sex"] = $person_info["sex"] == 1 ? "男" : "女";
        //年龄
        $return_data["age"]         = base_lib_TimeUtil::ceil_diff_year($person_info['birthday2']).'岁'; 
        $return_data["resume_id"]   = $next_apply_info["resume_id"];
        $return_data["job_id"]      = $next_apply_info["job_id"];
        $return_data["station"]     = $job_info["station"];
        //$time_diff                  = base_lib_TimeUtil::time_diff($next_apply_info["create_time"]);
        $diff_time                    = time()-strtotime($next_apply_info["create_time"]);
        $minutes                      = ceil($diff_time/60);
        $return_data['wait_time']   = $minutes;
         echo $this->jsonMsg(true, "获取成功",$return_data);exit;
    }
    
    //给设置成跳过的求职者发送短信
    private function sendOverMsg($net_apply_id){
        $service_net_apply   = new base_service_schoolnet_shuangxuanpersonapply();
        //获取下一个面试
        $company_id = $this->_userid;
        $account_id = base_lib_BaseUtils::getCookie('accountid');
        $net_apply_info     = $service_net_apply->getApplyById($net_apply_id, "id,person_id,create_time,resume_id,job_id,source,company_id");
        if(empty($net_apply_info)){
            return false;
        }
        $service_company = new base_service_company_company();
        $service_job     = new base_service_company_job_job();
        $service_person  = new base_service_person_person();
        $service_account    = new base_service_company_account();
        $account_info    = $service_account->getAccount($account_id,"account_id,mobile_phone,link_tel");
        
        $company_info    = $service_company->getCompany($net_apply_info["company_id"], 1, "company_name,company_shortname");
        $job_info        = $service_job->getJob($net_apply_info["job_id"], "station");
        $person_info     = $service_person->getPerson($net_apply_info["person_id"], "user_name,mobile_phone");
        
        $company_name    = !empty($company_info["company_shortname"]) ? $company_info["company_shortname"] : $company_info["company_name"];
        if($net_apply_info["source"] == 1){
            $msg_content = "{$person_info["user_name"]}同学您好，{".$company_name."}邀请您参与{".$job_info["station"]."}的视频面试未接通，您看到该信息后可登录汇博app与其联系";
        }else{
            $phone          = !empty($account_info["mobile_phone"]) ? $account_info["mobile_phone"] : $account_info["link_tel"];
            $msg_content    = "{$person_info["user_name"]}同学您好，{".$company_name."}邀请您参与{".$job_info["station"]."}的视频面试未接通，"
                . "您看到该信息后可拨打电话{$phone}或登录汇博app与我联系";
        }
        if(!empty($person_info["mobile_phone"])){
            base_lib_SMS::send($person_info["mobile_phone"], $msg_content);
        }
        return true;
    }
    
    //面试通过后发送短信
    private function sendSuccessMsg($net_apply_id){
         $service_net_apply   = new base_service_schoolnet_shuangxuanpersonapply();
        //获取下一个面试
        $company_id = $this->_userid;
        $account_id = base_lib_BaseUtils::getCookie('accountid');
        $net_apply_info     = $service_net_apply->getApplyById($net_apply_id, "id,person_id,create_time,resume_id,job_id,source,company_id");
        if(empty($net_apply_info)){
            return false;
        }
        $service_company = new base_service_company_company();
        $service_job     = new base_service_company_job_job();
        $service_person  = new base_service_person_person();
        $service_account    = new base_service_company_account();
        $account_info    = $service_account->getAccount($account_id,"account_id,mobile_phone,link_tel");
        
        $company_info    = $service_company->getCompany($net_apply_info["company_id"], 1, "company_name,company_shortname");
        $job_info        = $service_job->getJob($net_apply_info["job_id"], "station");
        $person_info     = $service_person->getPerson($net_apply_info["person_id"], "user_name,mobile_phone");
        
        $company_name       = !empty($company_info["company_shortname"]) ? $company_info["company_shortname"] : $company_info["company_name"];
        $phone              = !empty($account_info["mobile_phone"]) ? $account_info["mobile_phone"] : $account_info["link_tel"];
        $msg_content          = "{$person_info["user_name"]}，您通过了{$company_name}{".$job_info["station"]."}的初面，可拨打电话{$phone}联系企业进行后续沟通";
        if(!empty($person_info["mobile_phone"])){
            base_lib_SMS::send($person_info["mobile_phone"], $msg_content);
        }
        return true;
    }
	
}

?>